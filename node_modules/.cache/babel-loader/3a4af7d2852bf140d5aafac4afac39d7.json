{"ast":null,"code":"var _jsxFileName = \"/Users/hhnguyen12/Desktop/Simple-foodOrder-app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeal] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchMeals = useCallback(async () => {\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-filmapi-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeal(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMeals();\n  }, [fetchMeals]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      classNam: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      classNam: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"B3R6KH4dGURxWgOGQgZZqBCVhWc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/hhnguyen12/Desktop/Simple-foodOrder-app/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","useCallback","classes","Card","MealItem","AvailableMeals","meals","setMeal","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMa,UAAU,GAAGX,WAAW,CAAC,YAAY;AACzCU,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFD;AAGfC,UAAAA,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHR;AAIfC,UAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;AAJF,SAAjB;AAMD;;AAEDlB,MAAAA,OAAO,CAACY,WAAD,CAAP;AACD,KAtBD,CAsBE,OAAOT,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GA5B6B,EA4B3B,EA5B2B,CAA9B;AA8BAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,MAAIJ,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,QAAQ,EAAEN,OAAO,CAACyB,YAA3B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIjB,KAAJ,EAAW;AACT,wBACE;AAAS,MAAA,QAAQ,EAAER,OAAO,CAAC0B,UAA3B;AAAA,6BACE;AAAA,kBAAIlB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,QAAMmB,SAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACT,EADX;AAEE,IAAA,IAAI,EAAES,IAAI,CAACR,IAFb;AAGE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAHpB;AAIE,IAAA,KAAK,EAAEO,IAAI,CAACN;AAJd;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAQA,sBACE;AAAS,IAAA,SAAS,EAAEvB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKuB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApED;;GAAMxB,c;;KAAAA,c;AAsEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeal] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchMeals = useCallback(async () => {\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-filmapi-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n\n      setMeal(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMeals();\n  }, [fetchMeals]);\n\n  if (isLoading) {\n    return (\n      <section classNam={classes.MealsLoading}>\n        <p>Loading....</p>\n      </section>\n    );\n  }\n  if (error) {\n    return (\n      <section classNam={classes.MealsError}>\n        <p>{error}</p>\n      </section>\n    );\n  }\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    ></MealItem>\n  ));\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}